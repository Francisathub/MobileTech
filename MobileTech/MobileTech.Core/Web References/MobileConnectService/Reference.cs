// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MobileTech.Core.MobileConnectService {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="MobileConnectServiceSoap", Namespace="http://services.mainspringhealth.com")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileConnectService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUrlOperationCompleted;
        
        public MobileConnectService() {
            this.Url = "http://192.168.1.95/MC/MobileConnectService.asmx";
        }
        
        public MobileConnectService(string url) {
            this.Url = url;
        }
        
        public event GetUrlCompletedEventHandler GetUrlCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.mainspringhealth.com/GetUrl", RequestNamespace="http://services.mainspringhealth.com", ResponseNamespace="http://services.mainspringhealth.com", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public string GetUrl(string code, string appName) {
            object[] results = this.Invoke("GetUrl", new object[] {
                        code,
                        appName});
            return ((string)(results[0]));
        }
        
        public System.IAsyncResult BeginGetUrl(string code, string appName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUrl", new object[] {
                        code,
                        appName}, callback, asyncState);
        }
        
        public string EndGetUrl(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        public void GetUrlAsync(string code, string appName) {
            this.GetUrlAsync(code, appName, null);
        }
        
        public void GetUrlAsync(string code, string appName, object userState) {
            if ((this.GetUrlOperationCompleted == null)) {
                this.GetUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUrlCompleted);
            }
            this.InvokeAsync("GetUrl", new object[] {
                        code,
                        appName}, this.GetUrlOperationCompleted, userState);
        }
        
        private void OnGetUrlCompleted(object arg) {
            if ((this.GetUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUrlCompleted(this, new GetUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    public partial class GetUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    public delegate void GetUrlCompletedEventHandler(object sender, GetUrlCompletedEventArgs args);
}
